//Pacotes Importados
package Telas;
import Classes.*;
import static Telas.CadastroItem.tag;
import static Telas.Inicio.est;
import static Telas.CadastroProjeto.listaProjetos;
import static Telas.Inicio.usuario;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class Estoque extends javax.swing.JFrame {

    //Variáveis temporárias. estoqueAux é utilizado para realizar a busca por itens
    String[] tagAux;
    EstoqueClasse estoqueAux;
    Empréstimo emprestaItem = new Empréstimo();
    static Item itemEmp = new Item(); 
    public Estoque() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Background = new javax.swing.JPanel();
        EspaçoTxt = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tabela = new javax.swing.JTable();
        btnProcurar = new javax.swing.JButton();
        btnEmpréstimo = new javax.swing.JButton();
        btnDeletar = new javax.swing.JButton();
        btnLimpar = new javax.swing.JButton();
        lblTitulo = new javax.swing.JLabel();
        Selecionar = new javax.swing.JPanel();
        lblItemDesejado = new javax.swing.JLabel();
        txtItemDesejado = new javax.swing.JTextField();
        lblTag = new javax.swing.JLabel();
        cbProjeto = new javax.swing.JComboBox<>();
        spTag = new javax.swing.JScrollPane();
        lstTag = new javax.swing.JList<>();
        lblProjeto = new javax.swing.JLabel();
        btnRetirar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnVoltar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setForeground(java.awt.Color.white);
        setSize(new java.awt.Dimension(1280, 720));

        Background.setBackground(new java.awt.Color(89, 89, 94));
        Background.setPreferredSize(new java.awt.Dimension(1280, 720));

        EspaçoTxt.setBackground(new java.awt.Color(204, 204, 204));
        EspaçoTxt.setAlignmentX(0.0F);
        EspaçoTxt.setAlignmentY(0.0F);
        EspaçoTxt.setPreferredSize(new java.awt.Dimension(1200, 450));

        jScrollPane1.setBorder(null);

        Tabela.setBackground(new java.awt.Color(204, 204, 204));
        Tabela.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        Tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null,null,null},
                {null, null, null, null,null,null},
                {null, null, null, null,null,null},
                {null, null, null, null,null,null},
                {null, null, null, null,null,null},
                {null, null, null, null,null,null},
                {null, null, null, null,null,null},
                {null, null, null, null,null,null},
                {null, null, null, null,null,null},
                {null, null, null, null,null,null},
                {null, null, null, null,null,null},
            },
            new String [] {
                "Nome", "Descrição", "Quantidade", "Datasheet", "Projeto", "Tags"
            }
        ));
        Tabela.setPreferredSize(new java.awt.Dimension(1200, 450));
        jScrollPane1.setViewportView(Tabela);

        javax.swing.GroupLayout EspaçoTxtLayout = new javax.swing.GroupLayout(EspaçoTxt);
        EspaçoTxt.setLayout(EspaçoTxtLayout);
        EspaçoTxtLayout.setHorizontalGroup(
            EspaçoTxtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1200, Short.MAX_VALUE)
        );
        EspaçoTxtLayout.setVerticalGroup(
            EspaçoTxtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EspaçoTxtLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 482, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        btnProcurar.setText("Procurar");
        btnProcurar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcurarActionPerformed(evt);
            }
        });

        btnEmpréstimo.setText("Emprestar");
        btnEmpréstimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEmpréstimoActionPerformed(evt);
            }
        });

        btnDeletar.setText("Deletar Estoque");
        btnDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletarActionPerformed(evt);
            }
        });

        btnLimpar.setText("Limpar");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        lblTitulo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Logo BRANCA (1).png"))); // NOI18N
        lblTitulo.setAlignmentX(0.5F);

        Selecionar.setBackground(new java.awt.Color(121, 121, 134));
        Selecionar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Selecionar.setPreferredSize(new java.awt.Dimension(1205, 110));

        lblItemDesejado.setBackground(new java.awt.Color(121, 121, 134));
        lblItemDesejado.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblItemDesejado.setText("Item Desejado");

        txtItemDesejado.setBackground(new java.awt.Color(204, 204, 204));
        txtItemDesejado.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtItemDesejado.setPreferredSize(new java.awt.Dimension(200, 90));

        lblTag.setBackground(new java.awt.Color(121, 121, 134));
        lblTag.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblTag.setText("Tag");
        lblTag.setPreferredSize(new java.awt.Dimension(30, 19));

        cbProjeto.setBackground(new java.awt.Color(204, 204, 204));
        cbProjeto.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        cbProjeto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbProjeto.setSelectedIndex(-1);

        lstTag.setBackground(new java.awt.Color(204, 204, 204));
        lstTag.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lstTag.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lstTag.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        lstTag.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lstTag.setPreferredSize(new java.awt.Dimension(200, 90));
        spTag.setViewportView(lstTag);

        lblProjeto.setBackground(new java.awt.Color(121, 121, 134));
        lblProjeto.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblProjeto.setText("Projeto");

        javax.swing.GroupLayout SelecionarLayout = new javax.swing.GroupLayout(Selecionar);
        Selecionar.setLayout(SelecionarLayout);
        SelecionarLayout.setHorizontalGroup(
            SelecionarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SelecionarLayout.createSequentialGroup()
                .addComponent(lblItemDesejado, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtItemDesejado, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTag, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spTag, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblProjeto, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbProjeto, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        SelecionarLayout.setVerticalGroup(
            SelecionarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblItemDesejado, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lblTag, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lblProjeto, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(SelecionarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbProjeto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(txtItemDesejado, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
            .addComponent(spTag, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        btnRetirar.setText("Retirar");
        btnRetirar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRetirarActionPerformed(evt);
            }
        });

        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnVoltar.setText("Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout BackgroundLayout = new javax.swing.GroupLayout(Background);
        Background.setLayout(BackgroundLayout);
        BackgroundLayout.setHorizontalGroup(
            BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BackgroundLayout.createSequentialGroup()
                .addContainerGap(38, Short.MAX_VALUE)
                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(BackgroundLayout.createSequentialGroup()
                                .addGap(485, 485, 485)
                                .addComponent(lblTitulo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnVoltar))
                            .addComponent(EspaçoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(Selecionar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(BackgroundLayout.createSequentialGroup()
                        .addComponent(btnProcurar, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(btnLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(btnEmpréstimo, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnRetirar, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDeletar)))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        BackgroundLayout.setVerticalGroup(
            BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BackgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTitulo)
                    .addComponent(btnVoltar))
                .addGap(18, 18, 18)
                .addComponent(Selecionar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnProcurar)
                    .addComponent(btnEmpréstimo)
                    .addComponent(btnLimpar)
                    .addComponent(btnDeletar)
                    .addComponent(btnRetirar)
                    .addComponent(btnExcluir))
                .addGap(32, 32, 32)
                .addComponent(EspaçoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(Background, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEmpréstimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEmpréstimoActionPerformed
        //Empresta um Item
        EmprestimoOuRetirada emp = new EmprestimoOuRetirada();
        int indTab = Tabela.getSelectedRow();
        if(indTab == -1){
            JOptionPane.showMessageDialog(null,"Item Selecionado Inválido","Mensagem",JOptionPane.PLAIN_MESSAGE);
        }
        else{
            if(estoqueAux == null){
                itemEmp = est.getItem(indTab);
            }
            else{
                if(estoqueAux.getItem(indTab) == null){
                    itemEmp = est.getItem(indTab);
                }
                else{
                    itemEmp = estoqueAux.getItem(indTab);
                }
                
            }
            Membro aux = new Membro();
            if(itemEmp.isProjeto() || (itemEmp.isEmprestado() && itemEmp.getQtd() <= 0)){
                JOptionPane.showMessageDialog(null,"Item de Projeto ou todos os disponíveis já Emprestados","Mensagem",JOptionPane.PLAIN_MESSAGE);
            }
            else{
                emprestaItem.Empresta(itemEmp, aux);
                emp.setVisible(true);
            }
            if(estoqueAux != null){
                estoqueAux.DeletaEstoque();
        }
            carregarTabela(est);
        }
    }//GEN-LAST:event_btnEmpréstimoActionPerformed

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void btnDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletarActionPerformed
        //Deleta o Estoque
        if(est != null){
            est.DeletaEstoque();
        }
        if(estoqueAux != null){
            estoqueAux.DeletaEstoque();
        }
        tag.clear();
        atualizalstTag();
        carregarTabela(est);
    }//GEN-LAST:event_btnDeletarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        //Exclui os Itens selecionados na Tabela
        int[] itens = Tabela.getSelectedRows();
        for(int i = 0; i < itens.length;i++){
            est.removeItem(est.getItem(i));
        }
        if(estoqueAux != null){
            estoqueAux.DeletaEstoque();
        }
        carregarTabela(est);
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        //Limpa os Campos de Busca
        txtItemDesejado.setText("");
        lstTag.setSelectedValue(null, false);
        cbProjeto.setSelectedItem(null);
        if(estoqueAux != null){
            estoqueAux.DeletaEstoque();
        }
        carregarTabela(est);
    }//GEN-LAST:event_btnLimparActionPerformed

    private void btnProcurarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcurarActionPerformed
        //Procura pelos Itens
        String itemDes = txtItemDesejado.getText();
        ArrayList<String> itensNomes = new ArrayList();
        for(int i = 0; i < est.tamanho(); i++){
            if(est.getItem(i).getNome().contains(itemDes)){
                itensNomes.add(est.getItem(i).getNome());
            }
        }
        int projetoInd = cbProjeto.getSelectedIndex();
        Projeto projetoDes;
        if(projetoInd != -1){
            projetoDes = listaProjetos.get(projetoInd);
        }
        else{
            projetoDes = new Projeto("");
        }
        int[] tagInd = lstTag.getSelectedIndices();
        ArrayList<String> tagDes = new ArrayList<>();
        for(int i = 0; i < tagInd.length; i++){
            tagDes.add(tag.get(tagInd[i]));
        }
        ArrayList<Item> ItensDes = est.filtraItem(tagDes, projetoDes,itensNomes);
        estoqueAux = new EstoqueClasse(ItensDes);
        carregarTabela(estoqueAux);
        
    }//GEN-LAST:event_btnProcurarActionPerformed

    private void btnRetirarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRetirarActionPerformed
        //Retira os Itens de Projeto (Equivalente a Empréstimo, mas para Itens de Projeto)
        EmprestimoOuRetirada emp = new EmprestimoOuRetirada();
        int indTab = Tabela.getSelectedRow();
        if(indTab == -1){
            JOptionPane.showMessageDialog(null,"Item Selecionado Inválido","Mensagem",JOptionPane.PLAIN_MESSAGE);
        }
        else{
            if(estoqueAux == null){
                itemEmp = est.getItem(indTab);
            }
            else{
                if(estoqueAux.getItem(indTab) == null ){
                    itemEmp = est.getItem(indTab);
                }
                else{
                    itemEmp = estoqueAux.getItem(indTab);
                }
                
            }
            ArrayList<Membro> membrosProjAux = itemEmp.getProjeto().getMembros();
            if(itemEmp.isProjeto() || (membrosProjAux.contains(usuario)) || (usuario instanceof Gerente) || (usuario instanceof Diretor)){
                emp.setVisible(true);
            }
            else{
                JOptionPane.showMessageDialog(null,"Item não pertence ao Projeto ou Membro não pertence ao Projeto","Mensagem",JOptionPane.PLAIN_MESSAGE);
            }
            if(estoqueAux != null){
                estoqueAux.DeletaEstoque();
        }
            carregarTabela(est);
        }
    }//GEN-LAST:event_btnRetirarActionPerformed
    
    public void carregarTabela(EstoqueClasse esto){
        DefaultTableModel modelo = new DefaultTableModel(new Object[] {"Nome","Quantidade","Projeto","Tags"},0);
       
        for(int i = 0; i < esto.tamanho(); i++){
                Object linha[] = new Object[]{esto.getItem(i).getNome(),esto.getItem(i).getQtd(),esto.getItem(i).getProjeto().getNome(),esto.getItem(i).getTags()};
                modelo.addRow(linha); 
                   
        }
        Tabela.setModel(modelo);
        
        Tabela.getColumnModel().getColumn(0).setPreferredWidth(5);
        Tabela.getColumnModel().getColumn(1).setPreferredWidth(50);
        Tabela.getColumnModel().getColumn(2).setPreferredWidth(50);
        Tabela.getColumnModel().getColumn(3).setPreferredWidth(50);

        
        
    }
    
    public void atualizaboxListaProjetos(){
        cbProjeto.removeAllItems();
        if(listaProjetos != null){
        for(int i = 0; i < listaProjetos.size();i++){
          Projeto projetoAux = listaProjetos.get(i);
          cbProjeto.addItem(projetoAux.getNome());
        }
        cbProjeto.setSelectedIndex(-1);
      }
    }
    public void atualizalstTag(){
        if(!tag.isEmpty()){
            tagAux = new String[tag.size()];
            lstTag.setModel(new DefaultComboBoxModel<>(tag.toArray(tagAux)));
        }
        else{
            String[] vazio = {"","","","",""};
            lstTag.setModel(new DefaultComboBoxModel<>(vazio));
        }
    }
    
    public void atualizabntDir(){
        if(usuario instanceof Diretor){
            btnDeletar.setEnabled(true);
        }
        else{
            btnDeletar.setEnabled(false);
        }
        if(usuario instanceof Diretor || usuario instanceof Gerente){
            btnExcluir.setEnabled(true);
        }
        else{
            btnExcluir.setEnabled(false);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EstoqueClasse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EstoqueClasse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EstoqueClasse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EstoqueClasse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Estoque().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Background;
    private javax.swing.JPanel EspaçoTxt;
    private javax.swing.JPanel Selecionar;
    private javax.swing.JTable Tabela;
    private javax.swing.JButton btnDeletar;
    private javax.swing.JButton btnEmpréstimo;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btnProcurar;
    private javax.swing.JButton btnRetirar;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JComboBox<String> cbProjeto;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblItemDesejado;
    private javax.swing.JLabel lblProjeto;
    private javax.swing.JLabel lblTag;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JList<String> lstTag;
    private javax.swing.JScrollPane spTag;
    private javax.swing.JTextField txtItemDesejado;
    // End of variables declaration//GEN-END:variables
}
